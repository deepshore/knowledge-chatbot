name: Build and Deploy to Cloud Run
on: [push, pull_request]

env:
  GCLOUD_PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
  GH_REPOSITORY_NAME: ${{ env.GITHUB_REPOSITORY }}
  GCLOUD_IMAGE_REPOSITORY: ${{ secrets.GCLOUD_IMAGE_REPOSITORY }}
  GCLOUD_REGION: europe-west3
  GCLOUD_GCR: eu.gcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCLOUD_SA_KEY }}'
      - name: Setup Google Cloud CLI
        if: ${{ (github.ref == 'refs/heads/main') || (startsWith(github.ref, 'refs/tags/')) }}
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: '>= 363.0.0'
      - name: Docker Login
        if: ${{ (github.ref == 'refs/heads/main') || (startsWith(github.ref, 'refs/tags/')) }}
        run: |
          gcloud auth configure-docker
      - name: Build for verification
        if: github.ref != 'refs/heads/main'
        env:
          GH_DEPLOY_USERNAME: ${{ env.GITHUB_REPOSITORY_OWNER }}
          GH_DEPLOY_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./pytest chatbot-api.py
      - name: Build And Push Docker Image
        if: ${{ (github.ref == 'refs/heads/main') || (startsWith(github.ref, 'refs/tags/')) }}
        run: |
          export DOCKER_IMAGE=`echo "${GCLOUD_GCR}/${GCLOUD_PROJECT_ID}/${GCLOUD_IMAGE_REPOSITORY}/${{ env.GH_REPOSITORY_NAME }}" | sed -e 's#//#/#' -e 's#^/##'`
          ./pytest chatbot-api.py
          docker build -t "${DOCKER_IMAGE}:${{ github.sha }}" .
          docker push "${DOCKER_IMAGE}:${{ github.sha }}"
      - name: Deploy Cloud Run
        if: ${{ (github.ref == 'refs/heads/main') || (startsWith(github.ref, 'refs/tags/')) }}
        run: |
          export DOCKER_IMAGE=`echo "${GCLOUD_GCR}/${GCLOUD_PROJECT_ID}/${GCLOUD_IMAGE_REPOSITORY}/${{ env.GH_REPOSITORY_NAME }}" | sed -e 's#//#/#' -e 's#^/##'`

          gcloud run deploy ${{ env.GH_REPOSITORY_NAME }} --quiet \
            --image "${DOCKER_IMAGE}" --project "${GCLOUD_PROJECT_ID}" \
            --memory "1Gi" \
            --region "${GCLOUD_REGION}" \
            --set-env-vars "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" \
            --platform managed \
            --allow-unauthenticated \
            --format json
          echo "Invoke endpoint:"
          gcloud run services list --platform managed --format json | jq -r \
            '.[] | select(.metadata.name == "google-cloud-run-maven-test") | .status.address.url'
      - name: Release
        uses: fnkr/github-action-ghr@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GHR_PATH: build/distributions
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}